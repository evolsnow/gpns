//  protoc rpc.proto --go_out=plugins=grpc:.

syntax = "proto3";

package protos;

// The greeting service definition.
service GPNS {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  // Apple Push
  rpc ApplePush (PushRequest) returns (PushReply) {}

  // Test websocket Push
  rpc TestSocketPush (SocketPushRequest) returns (SocketPushReply) {}

}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
  int32 age = 2;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
  int32 age = 2;
}

// Push request, containing push message and repeated device token
message PushRequest{
  string message = 1;
  repeated string deviceToken = 2;
  map<string, string> extraInfo = 3;
}

// Push response, containing numbers of successful push and failed token list
message PushReply{
  int32 count = 1;
  repeated string deviceToken = 2;
}

// Test websocket push
enum MsgType {
    JSON = 0;
    RAW = 1;
  }

message SocketPushRequest{
  string msg = 1;
  MsgType msgType = 2;
}

message SocketPushReply{
  string msg = 1;
  MsgType msgType = 2;
}

message Empty {}